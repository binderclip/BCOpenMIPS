$date
	Sun Mar 22 15:03:19 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module openmips_min_sopc_tb $end
$scope module openmips_min_sopc0 $end
$var wire 1 ! clk $end
$var wire 32 " inst [31:0] $end
$var wire 32 # inst_addr [31:0] $end
$var wire 1 $ rom_ce $end
$var wire 1 % rst $end
$scope module openmips0 $end
$var wire 1 ! clk $end
$var wire 8 & ex_aluop_i [7:0] $end
$var wire 3 ' ex_alusel_i [2:0] $end
$var wire 32 ( ex_reg1_i [31:0] $end
$var wire 32 ) ex_reg2_i [31:0] $end
$var wire 5 * ex_waddr_i [4:0] $end
$var wire 5 + ex_waddr_o [4:0] $end
$var wire 32 , ex_wdata_o [31:0] $end
$var wire 1 - ex_we_i $end
$var wire 1 . ex_we_o $end
$var wire 8 / id_aluop_o [7:0] $end
$var wire 3 0 id_alusel_o [2:0] $end
$var wire 32 1 id_inst_i [31:0] $end
$var wire 32 2 id_pc_i [31:0] $end
$var wire 32 3 id_reg1_o [31:0] $end
$var wire 32 4 id_reg2_o [31:0] $end
$var wire 5 5 id_waddr_o [4:0] $end
$var wire 1 6 id_we_o $end
$var wire 5 7 mem_waddr_i [4:0] $end
$var wire 5 8 mem_waddr_o [4:0] $end
$var wire 32 9 mem_wdata_i [31:0] $end
$var wire 32 : mem_wdata_o [31:0] $end
$var wire 1 ; mem_we_i $end
$var wire 1 < mem_we_o $end
$var wire 32 = pc [31:0] $end
$var wire 5 > reg_raddr1 [4:0] $end
$var wire 5 ? reg_raddr2 [4:0] $end
$var wire 32 @ reg_rdata1 [31:0] $end
$var wire 32 A reg_rdata2 [31:0] $end
$var wire 1 B reg_re1 $end
$var wire 1 C reg_re2 $end
$var wire 32 D rom_addr_o [31:0] $end
$var wire 1 $ rom_ce_o $end
$var wire 32 E rom_data_i [31:0] $end
$var wire 1 % rst $end
$var wire 5 F wb_waddr_i [4:0] $end
$var wire 32 G wb_wdata_i [31:0] $end
$var wire 1 H wb_we_i $end
$scope module pc_reg0 $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var reg 1 I ce $end
$var reg 32 J pc [31:0] $end
$upscope $end
$scope module if_id0 $end
$var wire 1 ! clk $end
$var wire 32 K if_inst [31:0] $end
$var wire 32 L if_pc [31:0] $end
$var wire 1 % rst $end
$var reg 32 M id_inst [31:0] $end
$var reg 32 N id_pc [31:0] $end
$upscope $end
$scope module id0 $end
$var wire 5 O i_write_address [4:0] $end
$var wire 16 P imm_i [15:0] $end
$var wire 32 Q inst_i [31:0] $end
$var wire 6 R op1 [5:0] $end
$var wire 5 S op2 [4:0] $end
$var wire 6 T op3 [5:0] $end
$var wire 32 U pc_i [31:0] $end
$var wire 5 V read1_address [4:0] $end
$var wire 5 W read2_address [4:0] $end
$var wire 32 X reg1_data_i [31:0] $end
$var wire 32 Y reg2_data_i [31:0] $end
$var wire 1 % rst $end
$var wire 5 Z write_address [4:0] $end
$var reg 8 [ aluop_o [7:0] $end
$var reg 3 \ alusel_o [2:0] $end
$var reg 32 ] imm [31:0] $end
$var reg 1 ^ instvalid $end
$var reg 5 _ reg1_addr_o [4:0] $end
$var reg 32 ` reg1_o [31:0] $end
$var reg 1 a reg1_re_o $end
$var reg 5 b reg2_addr_o [4:0] $end
$var reg 32 c reg2_o [31:0] $end
$var reg 1 d reg2_re_o $end
$var reg 5 e waddr_o [4:0] $end
$var reg 1 f we_o $end
$upscope $end
$scope module regfile0 $end
$var wire 1 ! clk $end
$var wire 5 g raddr1 [4:0] $end
$var wire 5 h raddr2 [4:0] $end
$var wire 1 B re1 $end
$var wire 1 C re2 $end
$var wire 1 % rst $end
$var wire 5 i waddr [4:0] $end
$var wire 32 j wdata [31:0] $end
$var wire 1 H we $end
$var reg 32 k rdata1 [31:0] $end
$var reg 32 l rdata2 [31:0] $end
$upscope $end
$scope module id_ex0 $end
$var wire 1 ! clk $end
$var wire 8 m id_aluop [7:0] $end
$var wire 3 n id_alusel [2:0] $end
$var wire 32 o id_reg1 [31:0] $end
$var wire 32 p id_reg2 [31:0] $end
$var wire 5 q id_waddr [4:0] $end
$var wire 1 6 id_we $end
$var wire 1 % rst $end
$var reg 8 r ex_aluop [7:0] $end
$var reg 3 s ex_alusel [2:0] $end
$var reg 32 t ex_reg1 [31:0] $end
$var reg 32 u ex_reg2 [31:0] $end
$var reg 5 v ex_waddr [4:0] $end
$var reg 1 w ex_we $end
$upscope $end
$scope module ex0 $end
$var wire 8 x aluop_i [7:0] $end
$var wire 3 y alusel_i [2:0] $end
$var wire 32 z reg1_i [31:0] $end
$var wire 32 { reg2_i [31:0] $end
$var wire 1 % rst $end
$var wire 5 | waddr_i [4:0] $end
$var wire 1 - we_i $end
$var reg 32 } logicout [31:0] $end
$var reg 5 ~ waddr_o [4:0] $end
$var reg 32 !" wdata_o [31:0] $end
$var reg 1 "" we_o $end
$upscope $end
$scope module ex_mem0 $end
$var wire 1 ! clk $end
$var wire 5 #" ex_waddr [4:0] $end
$var wire 32 $" ex_wdata [31:0] $end
$var wire 1 . ex_we $end
$var wire 1 % rst $end
$var reg 5 %" mem_waddr [4:0] $end
$var reg 32 &" mem_wdata [31:0] $end
$var reg 1 '" mem_we $end
$upscope $end
$scope module mem0 $end
$var wire 1 % rst $end
$var wire 5 (" waddr_i [4:0] $end
$var wire 32 )" wdata_i [31:0] $end
$var wire 1 ; we_i $end
$var reg 5 *" waddr_o [4:0] $end
$var reg 32 +" wdata_o [31:0] $end
$var reg 1 ," we_o $end
$upscope $end
$scope module mem_wb $end
$var wire 1 ! clk $end
$var wire 5 -" mem_waddr [4:0] $end
$var wire 32 ." mem_wdata [31:0] $end
$var wire 1 < mem_we $end
$var wire 1 % rst $end
$var reg 5 /" wb_waddr [4:0] $end
$var reg 32 0" wb_wdata [31:0] $end
$var reg 1 1" wb_we $end
$upscope $end
$upscope $end
$scope module inst_rom0 $end
$var wire 32 2" addr [31:0] $end
$var wire 1 $ ce $end
$var reg 32 3" inst [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3"
b0 2"
01"
b0 0"
b0 /"
b0 ."
b0 -"
0,"
b0 +"
b0 *"
b0 )"
b0 ("
0'"
b0 &"
b0 %"
b0 $"
b0 #"
0""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
0w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
0f
b0 e
0d
b0 c
b0 b
0a
b0 `
b0 _
0^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
0I
0H
b0 G
b0 F
b0 E
b0 D
0C
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
0<
0;
b0 :
b0 9
b0 8
b0 7
06
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
0.
0-
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
1%
0$
b0 #
b0 "
1!
$end
#20000
0!
#30000
1!
#40000
0!
#50000
1!
#60000
0!
#70000
1!
#80000
0!
#90000
1!
#100000
0!
#110000
1!
#120000
0!
#130000
1!
#140000
0!
#150000
1!
#160000
0!
#170000
1!
#180000
0!
#190000
1!
#195000
1^
0%
#200000
0!
#210000
b110100000000010001000100000000 3"
b110100000000010001000100000000 "
b110100000000010001000100000000 E
b110100000000010001000100000000 K
1I
1$
1!
#220000
0!
#230000
1!
#240000
0!
#250000
1!
#260000
0!
#270000
1!
#280000
0!
#290000
1!
#300000
0!
#310000
1!
#320000
0!
#330000
1!
#340000
0!
#350000
1!
#360000
0!
#370000
1!
#380000
0!
#390000
1!
#400000
0!
#410000
1!
#420000
0!
#430000
1!
#440000
0!
#450000
1!
#460000
0!
#470000
1!
#480000
0!
#490000
1!
#500000
0!
#510000
1!
#520000
0!
#530000
1!
#540000
0!
#550000
1!
#560000
0!
#570000
1!
#580000
0!
#590000
1!
#600000
0!
#610000
1!
#620000
0!
#630000
1!
#640000
0!
#650000
1!
#660000
0!
#670000
1!
#680000
0!
#690000
1!
#700000
0!
#710000
1!
#720000
0!
#730000
1!
#740000
0!
#750000
1!
#760000
0!
#770000
1!
#780000
0!
#790000
1!
#800000
0!
#810000
1!
#820000
0!
#830000
1!
#840000
0!
#850000
1!
#860000
0!
#870000
1!
#880000
0!
#890000
1!
#900000
0!
#910000
1!
#920000
0!
#930000
1!
#940000
0!
#950000
1!
#960000
0!
#970000
1!
#980000
0!
#990000
1!
#1000000
0!
#1010000
1!
#1020000
0!
#1030000
1!
#1040000
0!
#1050000
1!
#1060000
0!
#1070000
1!
#1080000
0!
#1090000
1!
#1100000
0!
#1110000
1!
#1120000
0!
#1130000
1!
#1140000
0!
#1150000
1!
#1160000
0!
#1170000
1!
#1180000
0!
#1190000
1!
#1195000
b110100000000100000000000100000 3"
b110100000000100000000000100000 "
b110100000000100000000000100000 E
b110100000000100000000000100000 K
0^
b100 J
b100 =
b100 L
b100 #
b100 D
b100 2"
1%
#1200000
0!
#1205000
